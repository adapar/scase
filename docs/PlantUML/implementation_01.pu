/'

    SCASE: extendable prototype of an assistive communication tool for people with Locked-in Syndrome

    Copyright (C) 2014  Andr√©s Aparicio

    This file is part of SCASE.

    SCASE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SCASE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SCASE.  If not, see <http://www.gnu.org/licenses/>.

    '/

@startuml "images/implementation_01.png"

!include common.ipu

skinparam class {
	FontSize FONT_SIZE
	AttributeFontSize FONT_SIZE
}

package Controller <<Frame>> {

	class MainWindow {

		- PluginHandler pluginHandler 
		- Browser browser
		- QStackedWidget zoneFeedback
		- InteractionWidget zoneInteraction
		- BrowserPresentationWidget zoneBrowser

		-- slots --

		+ pluginSelected() 
		+ ringBell()

		-- signals --

		-- methods --

		- setup()
		- setupInterface() 
		- setupPlugins()

		-- event listeners --

		- keyPressEvent()

	}

	class BrowserPresentationWidget {

		- QString color
		- QString backgroundColor
		- QString backgroundColorSpecial
		- int fontSize

		-- slots --

		-- signals --

		-- methods --	

		+ setupStyle()
		+ setup()

		-- IBrowserPresentationDelegate implementation --

		+ setPresentationData()

	}

}

package Interaction <<Frame>> {

	class InteractionWidget {

		- int activationDelay
		- QTime stopwatch

		-- slots --

		-- signals --

		+ userHasEntered()
		+ userHasLeft()
		+ activated()

		-- methods --

		+ setActivationDelay()
		+ getActivationDelay()

		-- event listeners --

		# enterEvent()
		# leaveEvent()

	}

}

package PluginHandler <<Frame>> {

	class PluginHandler {

		- QHash< QString, IPlugin > directory

		-- slots --

		-- signals --

		+ invokeActionFromPlugin()

		-- methods --

		+ registerPlugin()
		+ getOutputWidgetFromPlugin()

	}

}

class Browser
interface IPlugin
interface IBrowserPresentationDelegate 

MainWindow -- Browser : usa >
Browser -- BrowserPresentationWidget : usa >

MainWindow -- InteractionWidget : usa >
MainWindow -- PluginHandler : usa >
MainWindow -- BrowserPresentationWidget : usa >

BrowserPresentationWidget --> IBrowserPresentationDelegate : implementa >

PluginHandler *.. "0..*" IPlugin : contiene >

@enduml
