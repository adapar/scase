/'

    SCASE: extendable prototype of an assistive communication tool for people with Locked-in Syndrome

    Copyright (C) 2014  Andrés Aparicio

    This file is part of SCASE.

    SCASE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SCASE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SCASE.  If not, see <http://www.gnu.org/licenses/>.

    '/

@startuml "images/implementation_02.png"

!include common.ipu

skinparam class {
	FontSize FONT_SIZE
	AttributeFontSize FONT_SIZE
}

package Interfaces <<Frame>> {

	interface IBrowserDelegate {

		-- methods --

		+ {abstract} addItemToLevel()
		+ {abstract} goToLevel()

	}

	interface IBrowserLevel {

		# container

		-- methods --

		+ {abstract} insertItem()
		+ {abstract} insertItem()
		+ {abstract} removeItemAtPos()
		+ setContainer()
		+ getContainer()

	}

	interface IBrowserItem {

		# bool isSpecial_
		# IBrowserLevel container
		# IBrowserLevel levelBelow_

		-- methods -- 

		+ {abstract} getPresentationData()
		+ {abstract} setPresentationData()
		+ {abstract} setAction()
		+ {abstract} getActionModule()
		+ {abstract} getActionName()
		+ getLevelBelow()
		+ setLevelBelow()
		+ hasLevelBelow()
		+ isSpecial()
		+ setIsSpecial()
		+ setContainer()
		+ getContainer()

	}

	interface IPlugin {

		- IBrowserItem browserItemDelegate
		- IBrowserDelegate browserDelegate

		--  methods --

		+ {abstract} invokeAction()
		+ {abstract} getBrowserTree()
		+ {abstract} getOutputWidget()
		+ {abstract} getName()
		+ {abstract} getPluginPath()
		+ {abstract} setupOutputWidget()
		+ setBrowserItemDelegate()

	}

	interface IBrowserPresentationDelegate {

		-- methods --

		+ {abstract} setPresentationData()

	}

}

class BrowserPresentationWidget
class Browser
class BrowserLevel
class BrowserItem
class PluginHandler

Browser --> IBrowserDelegate : implementa >
BrowserLevel --> IBrowserLevel : implementa >
BrowserItem --> IBrowserItem : implementa >
BrowserPresentationWidget --> IBrowserPresentationDelegate : implementa >

PluginHandler *.. "0..*" IPlugin : contiene >
IPlugin *.. "1" IBrowserDelegate : usa >
IPlugin *.. "1" IBrowserItem : usa >


@enduml
