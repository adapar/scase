/'

    SCASE: extendable prototype of an assistive communication tool for people with Locked-in Syndrome

    Copyright (C) 2014  Andr√©s Aparicio

    This file is part of SCASE.

    SCASE is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    SCASE is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SCASE.  If not, see <http://www.gnu.org/licenses/>.

    '/

@startuml "images/implementation_03.png"

!include common.ipu

skinparam class {
	FontSize FONT_SIZE_BIG
	AttributeFontSize FONT_SIZE_BIG
}

left to right direction

rotate

package Browser <<Frame>> {


	class BrowserLevel {

		- QList< IBrowserItem > items
		- int currentPosition

		-- IBrowserLevel implementation --

		# IBrowserItem container

		-- slots --

		-- signals --

		-- methods --

		+ insertItem()
		+ insertItem()
		+ removeItemAtPos()
		+ reset()
		+ next()
		+ atEnd()
		+ isStop()
		+ setIsStop()
		+ getCurrentItem()

		-- IBrowserLevel implementation -- 

		+ setContainer()
		+ getContainer()

	}

	class Browser {

		- BROWSER_NAVIGATION_STATUS navigationStatus
		- BrowserLevel rootLevel
		- BrowserLevel currentLevel
		- BrowserItem currentItem
		- QStack< BrowserLevel > levelStack
		- BrowserPresentationWidget presentationDelegate
		- int itemDelay
		- QTimer timer

		-- slots --

		+ nextItem()
		+ executeItem()
		+ stopTimer()
		+ startTimer()

		-- signals --

		+ pluginSelected()
		+ executeActionFromPlugin()
		+ ringBellSignal()

		-- methods --

		+ setup()
		+ setupPluginTree()
		+ start()
		+ ring_bell()
		+ goToPreviousStop()
		- readDeploymentTree()
		- readDeploymentItem()
		- setCurrentLevel()
		- updatePresentationDelegate()
		- goToPreviousLevel()

		-- IBrowserDelegate implementation --

		+ addItemToLevel()
		+ goToLevel()

	}

	class BrowserItem {

		- QString presentationData
		- QString moduleName
		- QString actionName
		- IPlugin pluginDelegate

		-- slots --

		-- signals --

		-- methods --

		+ getPresentationData()
		+ setPresentationData()
		+ setAction()
		+ getActionModule()
		+ getActionName()
		+ hasAction()
		+ getPluginDelegate()
		+ setPluginDelegate()
		+ hasPluginDelegate()

		-- IBrowserItem implementation -- 

		+ getLevelBelow()
		+ setLevelBelow()
		+ hasLevelBelow()
		+ isSpecial()
		+ setIsSpecial()
		+ setContainer()
		+ getContainer()

	}

}

class MainWindow
class BrowserPresentationWidget
interface IBrowserDelegate
interface IBrowserLevel
interface IBrowserItem

MainWindow -- Browser : usa >
Browser *-- "2" BrowserLevel : contiene >
BrowserLevel *-- "1..*" BrowserItem : contiene >
BrowserItem *-- "1" BrowserLevel : es contenido por >
BrowserLevel *-- "0..1" BrowserItem : es contenido por >
Browser -- BrowserPresentationWidget : usa >

Browser --> IBrowserDelegate : implementa >
BrowserLevel --> IBrowserLevel : implementa >
BrowserItem --> IBrowserItem : implementa >

@enduml
